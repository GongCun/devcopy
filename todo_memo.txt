# Install zlib, gdbm, ncurses library & tools
sudo apt-get update
sudo apt-get install zlib1g-dev
sudo apt-get install libgdbm-dev
sudo apt-get install libgdbm-compat-dev
sudo apt-get install -y gdbmtool
sudo apt-get install libncurses5-dev libncursesw5-dev
sudo apt-get install ncurses-doc


# TODO
* Create database with dbx, design the data structure.
* Draw the k-ary tree (include description), highlight the current node.
* Find the path from current versiont to the target version, rollback or
  update thru the path.
- Wrap the functions to library.
- Re-write the devcopy, save the backward files (undo), managed by the
  version control. The versioned files saved in a directory named by
  the version-hash-code:

      version-code -- chg.files, undo.files, hash.files (necessary?), rollback
      depends on the chg/undo files.

  Attention: devcopy equal to create a new branch.

- Show the copy progress of each process.

  Parent process get the process by reading the shared memory.

- Prepare test case.
- Display the elapse copy time.

# Git cmd
# push
git push -u origin version
# pull
git pull origin version

# Copy test
dd if=/dev/urandom of=./testfile bs=4M count=1024
dd conv=notrunc if=/dev/urandom of=./testfile bs=4M seek=100 count=1
openssl md5 ./testfile
md5sum ./testfile
cksum ./testfile

# MEMO

Devcopy create the change file & hash file that do not depend on previous
versions, so it's actually a new branch (not the child of current version). It's
irresponsible to leave it up to the user to device whether it is a branch or a
subversion, but now I haven't thought that through yet.

